% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SQLQueryFactory.R
\name{SQLQueryFactory}
\alias{SQLQueryFactory}
\title{SQLQueryFactory}
\description{
Represents an SQL query factory, responsible for building SQL queries. By simply calling
the available methods and supplying them with your needs, you get an SQLQuery object
containing a query that can bring the information from the database.
}
\section{Usage}{

\preformatted{
sqlFactory <- SQLQueryFactory$new()

sqlFactory$createSelect(tableMap, joinMap, distinct, where, groupBy, having)
sqlFactory$createView(viewName, tableMap, distinct, where, groupBy, having)
sqlFactory$deleteView(viewName)
}
}

\section{Arguments}{

\describe{
  \item{tableName}{Name of the table inside a database.}
  \item{viewName}{Name of the view inside a database.}
  \item{tableMap}{Dataframe specifing which tables and columns should be used to extract information.}
  \item{joinMap}{Dataframe specifing which tables to join and repective atributes.}
  \item{distinct}{Logical that dictates if the data retrieved should be distinct or not.}
  \item{where}{Filters the results by the specified conditions.}
  \item{groupBy}{Groups the results by the values of one or more columns.}
  \item{having}{Further filters the results, by allowing the use of agreggation functions (e.g. COUNT, SUM, ...)}
}
}

\section{Details}{

\code{$new()} Creates an instance of DBAbstractR.

\code{$connectToDatabase(dataSourceName = "", userID = "", password = "")} Performs the connection to a database, returning its information.

\code{$listTables} Returns a dataframe with all the tables (name and description) in the database.

\code{$listTableInformation(tableName = "")} Returns a dataframe with the information (names of the columns, their type and nullability) about a given table.
}

\examples{
\dontrun{
# Building the SQLQueryFactory object.
sqlQueryFactory <- SQLQueryFactory$new()

# Selecting both the username and last_login from the user table.
tableMap <- data.frame(tableName = "user", columns = "username", "last_login")

sqlQueryFactory$createSelect(tableMap)

# Creating a view based on the user table where all registered users date from under 2009.
tableMap <- data.frame(tablename = "user", columns = "*")
where <- "register_date < 2010-01-01"

# Droping an existing view
sqlQueryFactory$deleteView("old_users")
}

}
